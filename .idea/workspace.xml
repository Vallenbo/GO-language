<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="34cdedf6-327a-4921-b292-fb282c223ee3" name="更改" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://D:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2Zi8QnL5RSsUjqHIgiXE6mz0g2s" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go Application",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "true",
    "code.cleanup.on.save": "true",
    "deletionFromPopupRequiresConfirmation": "false",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "js.buildTools.gulp.gulp_package_dir": "",
    "last_opened_file_path": "E:/Project/go-language/Go_grpc/grpc四种模式/双相端流服务模式",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "rearrange.code.on.save": "true",
    "settings.editor.selected.configurable": "com.goide.configuration.GoLibrariesConfigurableProvider"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\Project\go-language\Go_grpc\grpc四种模式\双相端流服务模式" />
      <recent name="E:\Project\GoNotebook\GinNote\hello_grpc" />
      <recent name="E:\Project\GoNotebook\GinNote" />
      <recent name="E:\Project\GoNotebook\go_RPC\grpc超时控制" />
      <recent name="E:\Project\GoNotebook\go_RPC\grpc错误处理" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\Project\go-language\Go_grpc\grpc四种模式\client端流服务模式" />
      <recent name="E:\Project\go-language\Go_grpc\grpc四种模式\server端流服务模式\proto" />
      <recent name="E:\Project\go-language\Go_grpc\grpc四种模式\server端流服务模式" />
      <recent name="E:\Project\go-language\Go_rpc" />
      <recent name="E:\Project\GoNotebook\Go_micro_use\message" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build GoNotebook/test (1)">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="GoNotebook" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="GoNotebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build GoNotebook/test (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoNotebook" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="GoNotebook/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/文件名去除指定内容.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build GoNotebook/test" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoNotebook" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="GoNotebook/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/位运算.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build 与或运算.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoNotebook" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="GoNotebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/与或运算.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build helloworld" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoNotebook" />
      <working_directory value="$PROJECT_DIR$/Go_micro_use/helloworld" />
      <kind value="PACKAGE" />
      <package value="helloworld" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Go_micro_use/helloworld/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="GoNotebook" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="GoNotebook" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" environment="&lt;No Environment&gt;" path="">
      <method v="2" />
    </configuration>
    <configuration name="docker" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Go_micro_use/helloworld/Makefile" target="docker" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build GoNotebook/test (1)" />
        <item itemvalue="Go 构建.go build GoNotebook/test" />
        <item itemvalue="Go 构建.go build 与或运算.go" />
        <item itemvalue="Go 构建.go build helloworld" />
        <item itemvalue="Makefile 目标.docker" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>